

// This #include statement was automatically added by the Particle IDE.
#include <ThingSpeak.h>

/*
	Send temperature and Humidity information to the Thingspeak Server 
	by interfacing DHT11 Sensor with Particle Photon.
	http://www.electronicwings.com
*/



TCPClient client;
// This #include statement was automatically added by the Particle IDE.
#include <Adafruit_DHT.h>


unsigned long myChannelNumber = 1040179;		/*Thingspeak channel id*/
const char * myWriteAPIKey = "ER058GIV9QNHP2HL";/*Channel's write API key*/

DHT dht(D2, DHT11);

void setup() {
    ThingSpeak.begin(client);
    dht.begin();
    Particle.subscribe("hook-response/get_temp", myHandler, MY_DEVICES);
}
void myHandler(const char *event, const char *temperature) {
  // Handle the webhook response
}



void loop() {
    
    delay(500);
    
    /*Read humidity*/
    float humidity = dht.getHumidity();
    /* Read temperature as Celsius */
    float temperature = dht.getTempCelcius();

    /* Check if any reads failed and exit early (to try again)*/
    if  isnan((temperature)) {
        Serial.println("Failed to read from DHT sensor!");
	return;
	Particle.publish("temperature", temperature, PRIVATE);
  // Wait 60 seconds
  delay(30000);
	}

    /* Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different pieces of information in a channel.  */
    /*Here, we write Humidity to field 1 and temperature to field 2*/
    //ThingSpeak.writeField(myChannelNumber, 1, humidity, myWriteAPIKey);
    //delay(15000); /* ThingSpeak will only accept updates every 15 seconds*/
  
   //ThingSpeak.writeField(myChannelNumber, 1, humidity, myWriteAPIKey);
    delay(15000); /* ThingSpeak will only accept updates every 15 seconds*/
  
    ThingSpeak.writeField(myChannelNumber, 1, temperature, myWriteAPIKey);
    delay(15000); /* ThingSpeak will only accept updates every 15 seconds.*/
    //Serial.print("Humidity= ");
    //Serial.println(humidity);
    Serial.print("Temperature= ");
    Serial.println(temperature);
}
